sigma ~ dexp(1)),
data=d)
precis(m6.2)
library(rethinking)
data(milk)
d <- milk
d$K <- scale(d$kcal.per.g)
d$F <- scale(d$perc.fat)
d$L <- scale(d$perc.lactose)
m6.3 <- quap(alist(K ~ dnorm(mu, sigma),
mu <- a + bF*F,
a ~ dnorm(0, 0.2),
bF ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
m6.4 <- quap(alist(K ~ dnorm(mu, sigma),
mu <- a + bL*L,
a ~ dnorm(0, 0.2),
bL ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(m6.3)
precis(m6.4)
m6.5 <- quap(alist(K ~ dnorm(mu, sigma),
mu <- a + bF*F + bL*L,
a ~ dnorm(0, 0.2),
bF ~ dnorm(0, 0.5),
bL ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(m6.5)
pairs( ~ kcal.per.g + perc.fat + perc.lactose, data=d, col=rangi2)
set.seed(71)
# number of plants
N <- 100
# simulate initial heights
h0 <- rnorm(N, 10, 2)
# assign treatments and simulate fungus and growth
treatment <- rep(0:1, each=N/2)
fungus <- rbinom(N, size=1, prob=0.5-treatment*0.4)
h1 <- h0 + rnorm(N, 5 - 3*fungus)
# compose a clean data frame
d <- data.frame(h0=h0,
h1=h1,
treatment=treatment,
fungus=fungus)
precis(d)
m6.6 <- quap(alist(h1 ~ dnorm(mu, sigma),
mu <- h0*p,
p ~ dlnorm(0, 0.25),
sigma ~ dexp(1)),
data=d)
precis(m6.6)
m6.7 <- quap(alist(h1 ~ dnorm(mu, sigma),
mu <- h0*p,
p <- a + bt*treatment + bf*fungus,
a ~ dlnorm(0, 0.2),
bt ~ dnorm(0, 0.5),
bf ~ dnorm(0, 0.5),
sigma ~ dexp( 1 )),
data=d)
precis(m6.7)
m6.8 <- quap(alist(h1 ~ dnorm(mu, sigma),
mu <- h0*p,
p <- a + bt*treatment,
a ~ dlnorm(0, 0.2),
bt ~ dnorm(0, 0.5),
sigma ~ dexp(1)), data=d)
precis(m6.8)
library(rethinking)
d <- sim_happiness(seed=1977, N_years=1000)
precis(d)
d2 <- d[d$age>17,] # only adults
d2$A <- (d2$age-18) / (65-18)
d2$mid <- d2$married + 1
m6.9 <- quap(alist(happiness ~ dnorm(mu, sigma),
mu <- a[mid] + bA*A,
a[mid] ~ dnorm(0, 1),
bA ~ dnorm(0, 2),
sigma ~ dexp(1)),
data=d2)
precis(m6.9, depth=2)
m6.10 <- quap(alist(happiness ~ dnorm(mu, sigma),
mu <- a + bA*A,
a ~ dnorm(0, 1),
bA ~ dnorm(0, 2),
sigma ~ dexp(1)),
data=d2)
precis(m6.10)
library(dagitty)
install.packages('dagitty')
library(dagitty)
dag_6.1 <- dagitty("dag{
U [unobserved]
X -> Y
X <- U <- A -> C -> Y U -> B <- C
}")
adjustmentSets(dag_6.1, exposure="X", outcome="Y")
library(dagitty)
dag_6.1 <- dagitty("dag{
U [unobserved]
X -> Y
X <- U <- A -> C -> Y U -> B <- C
C <- V -> Y
}")
adjustmentSets(dag_6.1, exposure="X", outcome="Y")
library(dagitty)
dag_6.1 <- dagitty("dag{
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A -> C -> Y U -> B <- C
C <- V -> Y
}")
adjustmentSets(dag_6.1, exposure="X", outcome="Y")
data("WaffleDivorce")
WaffleDivorce
library(dagitty)
dag_6.2 <- dagitty( "dag {
A -> D
A -> M -> D
A <- S -> M
S -> W -> D}"
)
adjustmentSets( dag_6.2 , exposure="W" , outcome="D" )
library(dagitty)
dag_6.2 <- dagitty( "dag {
A -> D
A -> M -> D
A <- S -> M
S -> W -> D}"
)
adjustmentSets(dag_6.2, exposure="W", outcome="D")
d <- WaffleDivorce
d <- WaffleDivorce
d2 <- list()
d2$W <- standardize(d$WaffleHouses)
d2$D <- standardize(d$Divorce)
d2$S <- d$South
d <- WaffleDivorce
d2 <- list()
d2$W <- standardize(d$WaffleHouses)
d2$D <- standardize(d$Divorce)
d2$S <- d$South + 1
d2$S
d <- WaffleDivorce
d2 <- list()
d2$W <- standardize(d$WaffleHouses)
d2$D <- standardize(d$Divorce)
d2$S <- d$South + 1
model <- quap(alist(D ~ dnorm(mu, sigma),
mu <- a[S] + bW*W,
a[S] ~ dnorm(0, 1),
bA ~ dnorm(0, 2),
sigma ~ dexp(1)),
data=d2)
d <- WaffleDivorce
d2 <- list()
d2$W <- standardize(d$WaffleHouses)
d2$D <- standardize(d$Divorce)
d2$S <- d$South + 1
model <- quap(alist(D ~ dnorm(mu, sigma),
mu <- a[S] + bW*W,
a[S] ~ dnorm(0, 1),
bW ~ dnorm(0, 2),
sigma ~ dexp(1)),
data=d2)
precis(model, depth=2)
setwd("~/Desktop/statistical_rethinking")
library(rethinking)
data(WaffleDivorce)
d <- WaffleDivorce
d$A <- standardize(d$MedianAgeMarriage)
d$D <- standardize(d$Divorce)
d$M <- standardize(d$Marriage)
m5.1 <- quap(alist(D ~ dnorm(mu, sigma),
mu <- a + bA*A,
a ~ dnorm(0, 0.2),
bA ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data = d)
m5.2 <- quap(alist(D ~ dnorm(mu, sigma),
mu <- a + bM*M,
a ~ dnorm(0, 0.2),
bM ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data = d)
m5.3 <- quap(alist(D ~ dnorm(mu, sigma),
mu <- a + bM*M + bA*A,
a ~ dnorm(0, 0.2),
bM ~ dnorm(0, 0.5),
bA ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data = d)
set.seed(24071847)
compare( m5.1 , m5.2 , m5.3 , func=PSIS )
set.seed(24071847)
PSIS_m5.3 <- PSIS(m5.3, pointwise=TRUE)
set.seed(24071847)
WAIC_m5.3 <- WAIC(m5.3, pointwise=TRUE)
plot(PSIS_m5.3$k, WAIC_m5.3$penalty, xlab="PSIS Pareto k",
ylab="WAIC penalty", col=rangi2, lwd=2)
m5.3t <- quap(alist(D ~ dstudent(2, mu, sigma),
mu <- a + bM*M + bA*A,
a ~ dnorm(0, 0.2),
bM ~ dnorm(0, 0.5),
bA ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data = d)
PSIS(m5.3t)
m5.3t <- quap(alist(D ~ dstudent(2, mu, sigma),
mu <- a + bM*M + bA*A,
a ~ dnorm(0, 0.2),
bM ~ dnorm(0, 0.5),
bA ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data = d)
precis(m5.3t)
PSIS(m5.3t)
p <- c(0.7, 0.3)
i <- -sum(p*log(p))
i
p <- c(0.2, 0.25, 0.25, 0.3)
i <- -sum(p*log(p))
i
p <- c(0.33, 0.33, 0.33)
i <- -sum(p*log(p))
i
library(rethinking)
library(tidyverse)
library(reshape2)
p <- c(0.7, 0.3)
i <- -sum(p*log(p))
i
p <- c(0.2, 0.25, 0.25, 0.3)
i <- -sum(p*log(p))
i
p <- c(0.33, 0.33, 0.33)
i <- -sum(p*log(p))
i
set.seed(71)
# number of plants
N <- 100
# simulate initial heights
h0 <- rnorm(N, 10, 2)
# assign treatments and simulate fungus and growth
treatment <- rep(0:1, each=N/2)
fungus <- rbinom(N, size=1, prob=0.5 - treatment*0.4)
h1 <- h0 + rnorm(N, 5 - 3*fungus)
# compose a clean data frame
d <- data.frame(h0=h0, h1=h1, treatment=treatment, fungus=fungus)
precis(d)
m6.8.1 <- quap(alist(h1 ~ dnorm(mu, sigma),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm(0, 0.2),
bt ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
m6.8.2 <- quap(alist(h1 ~ dnorm(mu, sigma),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm(0, 1.0),
bt ~ dnorm(0, 1.0),
sigma ~ dexp(1)),
data=d)
m6.8.3 <- quap(alist(h1 ~ dnorm(mu, sigma),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm(0, 0.01),
bt ~ dnorm(0, 0.05),
sigma ~ dexp(1)),
data=d)
compare(m6.8.1, m6.8.2, m6.8.3)
compare(m6.8.1, m6.8.2, m6.8.3, func=PSIS)
data(Laffer)
d <- Laffer
precis(d)
data(Laffer)
precis(Laffer)
d <- list()
d$rate <- (Laffer$tax_rate - mean(Laffer$tax_rate)) / sd(Laffer$tax_rate)
d$revenue <- Laffer$tax_revenue / max(Laffer$tax_revenue)
linear <- quap(alist(revenue ~ dnorm(mu, sigma),
mu <- a + b*rate,
a ~ dlnorm(0.5, 0.5),
b ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(linear)
quadratic <- quap(alist(revenue ~ dnorm(mu, sigma),
mu <- a + b1*rate + b2*rate**2,
a ~ dlnorm(0.5, 0.5),
b1 ~ dnorm(0, 0.5),
b2 ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(quadratic)
cubic <- quap(alist(revenue ~ dnorm(mu, sigma),
mu <- a + b1*rate + b2*rate**2 + b3*rate**3,
a ~ dlnorm(0.5, 0.5),
b1 ~ dnorm(0, 0.5),
b2 ~ dnorm(0, 0.5),
b3 ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(cubic)
setwd("~/Desktop/statistical_rethinking")
xseq <- seq(from=min(d$rate)-0.15, to=max(d$rate)+0.15, length.out=50)
mu <- link(linear, data=list(A=xseq))
xseq <- seq(from=min(d$rate)-0.15, to=max(d$rate)+0.15, length.out=50)
mu <- link(linear, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
xseq <- seq(from=min(d$rate)-0.15, to=max(d$rate)+0.15, length.out=50)
mu <- link(linear, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
mu <- link(quadratic, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
mu <- link(cubic, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
compare(linear, quadratic, cubic)
compare(linear, quadratic, cubic, func=PSIS)
compare(linear, quadratic, cubic)
compare(linear, quadratic, cubic)
plot(compare(linear, quadratic, cubic))
waic_linear <- WAIC(linear, pointwise=TRUE)$WAIC
waic_quadratic <- WAIC(quadratic, pointwise=TRUE)$WAIC
waic_cubic <- WAIC(cubic, pointwise=TRUE)$WAIC
waic_linear
sum(waic_linear)
2*sum(waic_linear)
-2*sum(waic_linear)
linear <- quap(alist(revenue ~ dnorm(mu, sigma),
mu <- a + b*rate,
a ~ dlnorm(0.5, 0.5),
b ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(linear)
quadratic <- quap(alist(revenue ~ dnorm(mu, sigma),
mu <- a + b1*rate + b2*rate**2,
a ~ dlnorm(0.5, 0.5),
b1 ~ dnorm(0, 0.5),
b2 ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(quadratic)
cubic <- quap(alist(revenue ~ dnorm(mu, sigma),
mu <- a + b1*rate + b2*rate**2 + b3*rate**3,
a ~ dlnorm(0.5, 0.5),
b1 ~ dnorm(0, 0.5),
b2 ~ dnorm(0, 0.5),
b3 ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(cubic)
xseq <- seq(from=min(d$rate)-0.15, to=max(d$rate)+0.15, length.out=50)
mu <- link(linear, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
mu <- link(quadratic, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
mu <- link(cubic, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
compare(linear, quadratic, cubic)
plot(compare(linear, quadratic, cubic))
waic_linear <- WAIC(linear, pointwise=TRUE)$WAIC
waic_quadratic <- WAIC(quadratic, pointwise=TRUE)$WAIC
waic_cubic <- WAIC(cubic, pointwise=TRUE)$WAIC
sum(waic_linear)
waic_linear
WAIC(linear, pointwise=TRUE)$WAIC
WAIC(quadratic, pointwise=TRUE)$WAIC
WAIC(cubic, pointwise=TRUE)$WAIC
WAIC(linear, pointwise=TRUE)$WAIC
WAIC(quadratic, pointwise=TRUE)$WAIC
WAIC(cubic, pointwise=TRUE)$WAIC
max(WAIC(linear, pointwise=TRUE)$WAIC)
max(WAIC(quadratic, pointwise=TRUE)$WAIC)
max(WAIC(cubic, pointwise=TRUE)$WAIC)
WAIC(linear, pointwise=TRUE)$WAIC[12]
WAIC(linear, pointwise=TRUE)$WAIC
WAIC(quadratic, pointwise=TRUE)$WAIC
WAIC(cubic, pointwise=TRUE)$WAIC
WAIC(linear, pointwise=TRUE)$WAIC[12]
WAIC(quadratic, pointwise=TRUE)$WAIC[12]
WAIC(cubic, pointwise=TRUE)$WAIC[12]
linear <- quap(alist(revenue ~ dstudent(2, mu, sigma),
mu <- a + b*rate,
a ~ dlnorm(0.5, 0.5),
b ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(linear)
quadratic <- quap(alist(revenue ~ dstudent(2, mu, sigma),
mu <- a + b*rate,
a ~ dlnorm(0.5, 0.5),
b ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(quadratic)
cubic <- quap(alist(revenue ~ dstudent(2, mu, sigma),
mu <- a + b*rate,
a ~ dlnorm(0.5, 0.5),
b ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(cubic)
linear <- quap(alist(revenue ~ dstudent(2, mu, sigma),
mu <- a + b*rate,
a ~ dlnorm(0.5, 0.5),
b ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(linear)
quadratic <- quap(alist(revenue ~ dstudent(2, mu, sigma),
mu <- a + b1*rate + b2*rate**2,
a ~ dlnorm(0.5, 0.5),
b1 ~ dnorm(0, 0.5),
b2 ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(quadratic)
cubic <- quap(alist(revenue ~ dstudent(2, mu, sigma),
mu <- a + b1*rate + b2*rate**2 + b3*rate**3,
a ~ dlnorm(0.5, 0.5),
b1 ~ dnorm(0, 0.5),
b2 ~ dnorm(0, 0.5),
b3 ~ dnorm(0, 0.5),
sigma ~ dexp(1)),
data=d)
precis(cubic)
xseq <- seq(from=min(d$rate)-0.15, to=max(d$rate)+0.15, length.out=50)
mu <- link(linear, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
mu <- link(quadratic, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
mu <- link(cubic, data=list(rate=xseq))
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI)
plot(revenue ~ rate, data=d)
lines(xseq, mu_mean, lwd=2)
shade(mu_PI, xseq)
A <- c(0.2, 0.8, 0.05)
B <- c(0.2, 0.1, 0.15)
C <- c(0.2, 0.05, 0.7)
D <- c(0.2, 0.025, 0.05)
E <- c(0.2, 0.025, 0.05)
df <- cbind(A, B, C, D, E)
rownames(df) <- c("I1", "I2", "I3")
df
sum(-df[1,]*log(df[1,]))
log(5, base=2)
df[1,]
-df[1,]*log(df[1,])
I1_E <- sum(-df[1,]*log(df[1,]))
I2_E <- sum(-df[2,]*log(df[2,]))
I3_E <- sum(-df[3,]*log(df[3,]))
I1_E <- sum(-df[1,]*log(df[1,]))
I2_E <- sum(-df[2,]*log(df[2,]))
I3_E <- sum(-df[3,]*log(df[3,]))
I1_E
I2_E
I3_E
sum(-df[2,]*log(df[1,]))
sum(-df[2,]*log(df[1,]))
sum(-df[3,]*log(df[1,]))
df[2,]
log(df[1,])
sum(-df[2,]*log(df[1,]))
sum(-df[3,]*log(df[1,]))
sum(-df[1,]*log(df[2,]))
sum(-df[3,]*log(df[2,]))
sum(-df[1,]*log(df[3,]))
sum(-df[2,]*log(df[3,]))
sum(-df[2,]*log(df[1,]))
sum(-df[3,]*log(df[1,]))
